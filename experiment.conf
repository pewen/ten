"""
Configuration of the experiment.

NP Parameters
-------------
r_mean : float
    Mean of the normal distribution nanoparticle radius. [r] = nm
r_deviation : float, optional
    Standard deviation of the normal distribution nanoparticle radius. 
    if not, the radius is considered constant. [r] = nm
tau_D : float
    Lifetime of donor. [tau_D] = ns
mean_path : float
    Mean free path. [mean_path] = nm
epsilon : float
    [epsilon] = nm


NP traps Parameters
-----------------------------
traps = like list
    Lista con los aceptores a usar.
traps_r_mechanisms = float
    Radio usado en el mecanismo de transferencia. 
    [traps_r_mechanisms] = nm.
traps_way = str, optional
    Way to create the acceptors. Can be 'vol' (volumetrically) 
    for uniform distribution inside of nanoparticle or 'sup' 
    (superficialy) for uniform distributions on the surface of 
    the nanoparticle.
    Be default is 'vol'.


Aceptors Parameters
-------------------
aceptors = like list
    Lista con los aceptores a usar.
r_mechanisms = float
    Radio usado en el mecanismo de transferencia. 
    [r_mechanisms] = nm.
way = str
    Way to create the acceptors. Can be 'vol' (volumetrically) 
    for uniform distribution inside of nanoparticle or 'sup' 
    (superficialy) for uniform distributions on the surface of 
    the nanoparticle.
    Be default is 'vol'.


Exiton Parameters
-----------------
exiton : str
    Way to create the exiton. Can be 'laser' to generate uniformily in 
    the nanoparticle or 'elec' (electrolysis) to generate between the 
    radius R of the nanoparticle and a r (R > r).
r_electro : float, optional
    In a chemical electrolysis, the exiton position is generated 
    between the radius R of the nanoparticle and a radius r (r<R). 
    [r_electro] = nm.


Experiments Parameters
----------------------
experiments = str
    Nombre de los experimentos a simular. Pueden ser:
    quenching, difusion_length, single_count
mechanisms = str
    Nombre del mecanismo de transferencia. Puede ser:
    forster, dexter
exitations = float, optional
    Algunos experimentos, por ahora, necesitan el numero de exitaciones.
steps = float, optional
    Cuantos Numero de exitaciones que va a hacer quenching antes de 
    chequear si converge o no.
convergence = float, optional
    Diferencia para quenching para definir si converge o no.
"""

# NanoParticle
r_mean = 15 #coment
r_desviation = 0
tau_D = 0.333
mean_path = 100
epsilon = 1.5

# las formas de poner una lista de aceptores van a ser dos:
# Una lista con valores definidos por el usuario:
# aceptors = [0, 21, 43, 86, 171, 436, 871]
# Una lista x-espaciada:
# aceptors = 0 ... 100 20

# Intrinsic aceptors
traps = [10, 12, 25]
traps_r_mechanisms = 1
traps_way = 'vol'

# Aceptors
aceptors = [0, 10, 20]
r_mechanisms = 1
way = 'vol'

# Exiton
exiton = 'laser'
r_electro = 0

# Experiment
experiments = ['quenching', 'difusion_length', 'single_count']
mechanisms = ['forster']
excitations = 10000
steps = 1000
convergence = 0.01
